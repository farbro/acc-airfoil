heat_template_version: 2016-04-08
#
# You can deploy this template using the following command:
# 'openstack stack create -t clustersetup.yaml -e clustersetup-env.yaml <stack_name>'
#
# If you prefer to just start a small testing stack, you can change the *-env.yaml file
# to 'openstack stack create -t clustersetup.yaml -e clustersetup-env-testing-small.yaml <stack_name>'
#
# After successful stack creation you can login with 
# 'openstack server ssh --option "ForwardAgent=yes" -l syseleven servicehost0'
# From there you can jump to any of your nodes. An example:
# 'ssh lb0.node.consul'
#

description: Deploy the Airfoil computing cluster

parameters:
  number_workers: 
    type: string
    default: 4
  flavor:
    type: string
    default: ssc.xsmall
    constraints:
      - custom_constraint: nova.flavor
  image: 
    type: string
    constraints:
      - custom_constraint: glance.image
  public_network:
    type: string
    default: ext-net
  ssh_keys:
    type: comma_delimited_list
  worker_name:
    type: string
  main_name:
    type: string

resources:
  private_network:
    type: OS::Neutron::Net
    properties: 
      name: cluster-net

  cluster_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ private_network ]
    properties:
      name: subnet
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      network: {get_resource: private_network}
      ip_version: 4
      cidr: 10.10.0.0/24
      allocation_pools:
      - {start: 10.10.0.10, end: 10.10.0.250}

  cluster_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {
        network: { get_param: public_network }
      }

  router_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: [ cluster_router, private_network ]
    properties:
      router: { get_resource: cluster_router }
      subnet: { get_resource: cluster_subnet }

  ### Main node  ###
  ###############
  main_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ router_subnet_connect ]
    properties:
      count: 1
      resource_def: 
        type: main-node.yaml
        properties:
          name: { get_param: main_name }
          flavor: { get_param: flavor }
          image: { get_param: image }
          private_network: { get_resource: private_network }
          public_network: { get_param: public_network }
          ssh_keys: { get_param: ssh_keys }

  ### Worker nodes ###
  ###############
  worker_profile:
    type: OS::Senlin::Profile
    depends_on: [ router_subnet_connect ]
    properties:
      type: worker-node.yaml
      properties:
        name: {get_param: worker_name}
        flavor: { get_param: flavor }
        image: { get_param: image }
        private_network: { get_resource: private_network }
        ssh_keys: { get_param: ssh_keys }

  cluster:
    type: OS::Senlin::Cluster
    properties:
      desired_capacity: {get_param: number_workers}
      min_size: {get_param: number_workers}
      profile: {get_resource: worker_profile}


  scale_in_policy:
    type: OS::Senlin::Policy
    properties:
      type: senlin.policy.scaling-1.0
      bindings: 
        - cluster: {get_resource: cluster}
      properties: 
        event: CLUSTER_SCALE_IN
        adjustment:
          type: CHANGE_IN_CAPACITY
          number: 1

  scale_out_policy:
    type: OS::Senlin::Policy
    properties:
      type: senlin.policy.scaling-1.0
      bindings: 
        - cluster: {get_resource: cluster}
      properties: 
        event: CLUSTER_SCALE_OUT
        adjustment:
          type: CHANGE_IN_CAPACITY
          number: 1


  reciever_scale_in:
    type: OS::Senlin::Receiver
    properties:
      cluster: {get_resource: cluster}
      ation: CLUSTER_SCALE_IN
      type: webhook

  reciever_scale_out:
    type: OS::Senlin::Receiver
    properties:
      cluster: {get_resource: cluster}
      ation: CLUSTER_SCALE_OUT
      type: webhook


  deletion_policy:
    type: OS::Senlin::Policy
    properties:
      type: senlin.policy.deletion-1.0
      bindings:
        - cluster: {get_resource: cluster}
      properties:
        criteria: YOUNGEST_FIRST
        destroy_after_deletion: True
        grace_period: 20
        reduce_desired_capacity: False

outputs:
  scale_up_url:
    description: >
      Webhook to scale up
    value: {get_attr: [receiver_scale_in, channel, alarm_url]}
  scale_dn_url:
    description: >
      Webhook to scale down
    value: {get_attr: [receiver_scale_out, channel, alarm_url]}
